apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-gateway-ingress
  namespace: default  # Le namespace où se trouve le service api-gateway
  annotations:
    kubernetes.io/ingress.class: alb  # Utilise le contrôleur AWS ALB
    alb.ingress.kubernetes.io/scheme: internet-facing  # ALB accessible publiquement
    alb.ingress.kubernetes.io/target-type: ip  # Le routage se fait vers les pods directement via leurs IP
    alb.ingress.kubernetes.io/backend-protocol: HTTP  # Le protocole utilisé pour communiquer avec le backend
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'  # Active l'écoute sur HTTP et HTTPS
    cert-manager.io/cluster-issuer: letsencrypt-prod  # Demande automatique de certificat TLS via cert-manager
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.certificateARN }}  # ARN du certificat ACM à utiliser pour HTTPS
spec:
  ingressClassName: alb  # Spécifie explicitement la classe d’Ingress utilisée (ALB)
  tls:
    - hosts:
        - {{ .Values.domainName }}  # Le nom de domaine pour lequel le certificat TLS sera généré
      secretName: {{ .Values.domainName | replace "." "-" }}-tls  # Nom du Secret TLS généré automatiquement
  rules:
    - host: {{ .Values.domainName }}  # Le domaine utilisé dans l'URL d’accès
      http:
        paths:
          - path: /  # Toutes les requêtes vers "/" seront redirigées
            pathType: Prefix
            backend:
              service:
                name: api-gateway  # Nom du service Kubernetes cible
                port:
                  number: 8080  # Port exposé par le service api-gateway
