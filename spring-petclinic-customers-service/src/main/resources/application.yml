spring:
  application:
    name: customers-service
  config:
    import: optional:configserver:${CONFIG_SERVER_URL:http://config-server:8888}
  profiles:
    active: mysql
  datasource:
    url: jdbc:mysql://${DB_HOST}:${DB_PORT:3306}/${DB_NAME}?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&connectTimeout=60000&socketTimeout=60000&autoReconnect=true
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME:com.mysql.cj.jdbc.Driver}
    hikari:
      connection-timeout: ${SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT:60000}
      idle-timeout: ${SPRING_DATASOURCE_HIKARI_IDLE_TIMEOUT:300000}
      max-lifetime: ${SPRING_DATASOURCE_HIKARI_MAX_LIFETIME:1200000}
      maximum-pool-size: ${SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE:5}
      minimum-idle: ${SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE:1}
      pool-name: SpringBootJPAHikariCP
      leak-detection-threshold: 60000
      initialization-fail-timeout: ${SPRING_DATASOURCE_HIKARI_INITIALIZATION_FAIL_TIMEOUT:30000}
      auto-commit: false
  jpa:
    defer-datasource-initialization: false
    hibernate:
      # ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
      ddl-auto: none
    show-sql: ${SPRING_JPA_SHOW_SQL:false}
    database-platform: ${SPRING_JPA_DATABASE_PLATFORM:org.hibernate.dialect.MySQLDialect}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        jdbc:
          lob:
            non_contextual_creation: true
          time_zone: UTC
        connection:
          provider_disables_autocommit: true
          autocommit: false
        format_sql: false
        use_sql_comments: false
  sql:
    init:
      mode: always
      schema-locations: classpath:db/mysql/schema.sql
      data-locations: classpath:db/mysql/data.sql
  boot:
    admin:
      client:
        url: ${SPRING_BOOT_ADMIN_CLIENT_URL:http://admin-server:9090}
        instance:
          prefer-ip: ${SPRING_BOOT_ADMIN_CLIENT_PREFER_IP:true}

server:
  port: ${SERVER_PORT:8081}

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://discovery-server:8761/eureka}
  instance:
    hostname: ${EUREKA_INSTANCE_HOSTNAME:customers-service}
    prefer-ip-address: ${EUREKA_INSTANCE_PREFER_IP_ADDRESS:false}

# Configuration des m√©triques Prometheus
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,readiness
  endpoint:
    health:
      show-details: always
      db:
        enabled: true
    readiness:
      enabled: true
    prometheus:
      enabled: true
  health:
    db:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}

# Configuration du logging pour le debugging (temporaire)
logging:
  level:
    org.springframework.web: DEBUG
    org.springframework.transaction: DEBUG
    org.springframework.samples.petclinic.customers: DEBUG
    com.zaxxer.hikari: DEBUG
    org.springframework.jdbc: DEBUG
    org.hibernate.SQL: ${SPRING_JPA_SHOW_SQL:false}
    root: DEBUG